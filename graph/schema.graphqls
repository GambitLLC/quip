" Bind graphQL type to a specific Go struct "
directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

# " Bind type fields to a specific Go struct field "
# directive @goField(
#   forceResolver: Boolean
#   name: String
#   omittable: Boolean
# ) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

" Represents an instant in time. Gqlgen binds model to time.Time. "
scalar Time

" User model. "
type User {
  " User ID respresented as Solana public key "
  id: ID!
  " Unique display name "
  name: String!
  profile: Profile
}

" Customizable User profile. "
type Profile {
  dob: Time
}

# eslint-disable-next-line @graphql-eslint/require-description
type Query {
  " Query for specific user by either id or name. "
  user(
    " Filter by User ID (public key) "
    id: String
    " Filter by name "
    name: String
  ): User
}

" Changeset for mutating a user's profile. "
input ProfileChanges @goModel(model: "map[string]interface{}") {
  dob: Time
}

# eslint-disable-next-line @graphql-eslint/require-description
type Mutation {
  updateProfile(changes: ProfileChanges!): Boolean!
}
