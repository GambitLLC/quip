syntax = "proto3";
package quip.matchmaker;
option go_package="github.com/GambitLLC/quip/libs/pb/matchmaker";

import "matchmaker/messages.proto";
import "google/protobuf/empty.proto";

// Matchmaker service for end user clients.
service QuipFrontend {
  // Connect is a long-lived rpc for clients to receive status updates.
  // A client must be connected before any other frontend methods (start queue, etc)
  // may be called.
  rpc Connect(google.protobuf.Empty) returns (stream PlayerUpdate);

  rpc GetPlayer(GetPlayerRequest) returns (Player);

  rpc StartQueue(StartQueueRequest) returns (google.protobuf.Empty);

  rpc StopQueue(StopQueueRequest) returns (google.protobuf.Empty);
}

// GetPlayer gets the details for the currently logged in player.
message GetPlayerRequest {
}

message StartQueueRequest {
  QueueConfiguration config = 1;
}

message StopQueueRequest {
}

message PlayerUpdate {
  Player player = 1;
  StatusUpdate update = 2;
}
