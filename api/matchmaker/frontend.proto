syntax = "proto3";
package quip.matchmaker;
option go_package="github.com/GambitLLC/quip/libs/pb/matchmaker";

import "matchmaker/messages.proto";
import "google/protobuf/empty.proto";
import "google/rpc/status.proto";

message GetStatusRequest {
  string target = 1;
}

message StartQueueRequest {
  GameConfiguration config = 1;
}

// TODO: keepalive?
message StreamRequest {
  oneof message {
    GetStatusRequest get_status = 1;
    StartQueueRequest start_queue = 2;
    google.protobuf.Empty stop_queue = 3;
  }
}

message StreamResponse {
  oneof message {
    // error is sent whenever some stream request failed
    google.rpc.Status error = 1;

    Status status_update = 2;
  }
}

service Frontend {
  rpc Stream(stream StreamRequest) returns (stream StreamResponse);
}