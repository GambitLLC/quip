syntax = "proto3";
package quip.matchmaker;
option go_package="github.com/GambitLLC/quip/libs/pb/matchmaker";

import "google/protobuf/timestamp.proto";

// GameConfiguration contains information for specifying a desired match.
message GameConfiguration {
  string gamemode = 1;
}

message MatchRoster {
  // TODO: support teams
  // message Team { repeated string players = 1; }
  // repeated Team teams = 1;

  repeated string players = 1;
}

enum PlayerState {
  STATE_OFFLINE = 0;
  STATE_IDLE = 1;
  STATE_SEARCHING = 2;
  STATE_PLAYING = 3;
}

// Status represents the current matchmaking state for a specific player.
message Status {
  string player = 1;
  PlayerState state = 2;
}

// QueueDetails contains information about a currently running queue.
message QueueDetails {
  GameConfiguration config = 1;
  google.protobuf.Timestamp start_time = 2;
}

enum Reason {
  REASON_UNSPECIFIED = 0;
  REASON_PLAYER = 1;
}

// QueueStopped contains information about why a queue has stopped.
message QueueStopped {
  Reason reason = 1;
  optional string message = 2;
}

// MatchDetails contains information about a potential match that was found.
// Sent as intermediate step for players to accept (send match wager) match before
// allocating a server.
message MatchDetails {
  string match_id = 1;
  google.protobuf.Timestamp time = 2;
}

message MatchCancelled {
  string match_id = 1;
  Reason reason = 2;
}

// MatchConnection contains necessary match information to identify and connect to a match.
message MatchConnection {
  string match_id = 1;
  string connection = 2;
}

message MatchResults {
  string match_id = 1;
}

