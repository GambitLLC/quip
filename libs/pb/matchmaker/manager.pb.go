// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v3.21.12
// source: matchmaker/manager.proto

package matchmaker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId    string              `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Connection string              `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
	Config     *MatchConfiguration `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	Roster     *MatchRoster        `protobuf:"bytes,4,opt,name=roster,proto3" json:"roster,omitempty"`
}

func (x *CreateMatchRequest) Reset() {
	*x = CreateMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMatchRequest) ProtoMessage() {}

func (x *CreateMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMatchRequest.ProtoReflect.Descriptor instead.
func (*CreateMatchRequest) Descriptor() ([]byte, []int) {
	return file_matchmaker_manager_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMatchRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *CreateMatchRequest) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

func (x *CreateMatchRequest) GetConfig() *MatchConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *CreateMatchRequest) GetRoster() *MatchRoster {
	if x != nil {
		return x.Roster
	}
	return nil
}

type CancelMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *CancelMatchRequest) Reset() {
	*x = CancelMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelMatchRequest) ProtoMessage() {}

func (x *CancelMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelMatchRequest.ProtoReflect.Descriptor instead.
func (*CancelMatchRequest) Descriptor() ([]byte, []int) {
	return file_matchmaker_manager_proto_rawDescGZIP(), []int{1}
}

func (x *CancelMatchRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

type FinishMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId string        `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Results *MatchResults `protobuf:"bytes,2,opt,name=results,proto3" json:"results,omitempty"`
}

func (x *FinishMatchRequest) Reset() {
	*x = FinishMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishMatchRequest) ProtoMessage() {}

func (x *FinishMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishMatchRequest.ProtoReflect.Descriptor instead.
func (*FinishMatchRequest) Descriptor() ([]byte, []int) {
	return file_matchmaker_manager_proto_rawDescGZIP(), []int{2}
}

func (x *FinishMatchRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *FinishMatchRequest) GetResults() *MatchResults {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_matchmaker_manager_proto protoreflect.FileDescriptor

var file_matchmaker_manager_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x71, 0x75, 0x69, 0x70,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x06, 0x72, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x12, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75,
	0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x32, 0xf1, 0x01, 0x0a, 0x0b, 0x51, 0x75, 0x69, 0x70, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x12, 0x23, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x4a, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23,
	0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4a, 0x0a, 0x0b, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x71, 0x75, 0x69,
	0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x61, 0x6d, 0x62, 0x69, 0x74, 0x4c, 0x4c, 0x43, 0x2f,
	0x71, 0x75, 0x69, 0x70, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_matchmaker_manager_proto_rawDescOnce sync.Once
	file_matchmaker_manager_proto_rawDescData = file_matchmaker_manager_proto_rawDesc
)

func file_matchmaker_manager_proto_rawDescGZIP() []byte {
	file_matchmaker_manager_proto_rawDescOnce.Do(func() {
		file_matchmaker_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchmaker_manager_proto_rawDescData)
	})
	return file_matchmaker_manager_proto_rawDescData
}

var file_matchmaker_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_matchmaker_manager_proto_goTypes = []interface{}{
	(*CreateMatchRequest)(nil), // 0: quip.matchmaker.CreateMatchRequest
	(*CancelMatchRequest)(nil), // 1: quip.matchmaker.CancelMatchRequest
	(*FinishMatchRequest)(nil), // 2: quip.matchmaker.FinishMatchRequest
	(*MatchConfiguration)(nil), // 3: quip.matchmaker.MatchConfiguration
	(*MatchRoster)(nil),        // 4: quip.matchmaker.MatchRoster
	(*MatchResults)(nil),       // 5: quip.matchmaker.MatchResults
	(*emptypb.Empty)(nil),      // 6: google.protobuf.Empty
}
var file_matchmaker_manager_proto_depIdxs = []int32{
	3, // 0: quip.matchmaker.CreateMatchRequest.config:type_name -> quip.matchmaker.MatchConfiguration
	4, // 1: quip.matchmaker.CreateMatchRequest.roster:type_name -> quip.matchmaker.MatchRoster
	5, // 2: quip.matchmaker.FinishMatchRequest.results:type_name -> quip.matchmaker.MatchResults
	0, // 3: quip.matchmaker.QuipManager.CreateMatch:input_type -> quip.matchmaker.CreateMatchRequest
	1, // 4: quip.matchmaker.QuipManager.CancelMatch:input_type -> quip.matchmaker.CancelMatchRequest
	2, // 5: quip.matchmaker.QuipManager.FinishMatch:input_type -> quip.matchmaker.FinishMatchRequest
	6, // 6: quip.matchmaker.QuipManager.CreateMatch:output_type -> google.protobuf.Empty
	6, // 7: quip.matchmaker.QuipManager.CancelMatch:output_type -> google.protobuf.Empty
	6, // 8: quip.matchmaker.QuipManager.FinishMatch:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_matchmaker_manager_proto_init() }
func file_matchmaker_manager_proto_init() {
	if File_matchmaker_manager_proto != nil {
		return
	}
	file_matchmaker_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_matchmaker_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchmaker_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matchmaker_manager_proto_goTypes,
		DependencyIndexes: file_matchmaker_manager_proto_depIdxs,
		MessageInfos:      file_matchmaker_manager_proto_msgTypes,
	}.Build()
	File_matchmaker_manager_proto = out.File
	file_matchmaker_manager_proto_rawDesc = nil
	file_matchmaker_manager_proto_goTypes = nil
	file_matchmaker_manager_proto_depIdxs = nil
}
