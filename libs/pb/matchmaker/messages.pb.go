// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: matchmaker/messages.proto

package matchmaker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_STATE_OFFLINE   State = 0
	State_STATE_IDLE      State = 1
	State_STATE_SEARCHING State = 2
	State_STATE_PLAYING   State = 3
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		0: "STATE_OFFLINE",
		1: "STATE_IDLE",
		2: "STATE_SEARCHING",
		3: "STATE_PLAYING",
	}
	State_value = map[string]int32{
		"STATE_OFFLINE":   0,
		"STATE_IDLE":      1,
		"STATE_SEARCHING": 2,
		"STATE_PLAYING":   3,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_matchmaker_messages_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_matchmaker_messages_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{0}
}

// GameConfiguration contains information for specifying a desired match.
type GameConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gamemode string `protobuf:"bytes,1,opt,name=gamemode,proto3" json:"gamemode,omitempty"`
}

func (x *GameConfiguration) Reset() {
	*x = GameConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfiguration) ProtoMessage() {}

func (x *GameConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfiguration.ProtoReflect.Descriptor instead.
func (*GameConfiguration) Descriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{0}
}

func (x *GameConfiguration) GetGamemode() string {
	if x != nil {
		return x.Gamemode
	}
	return ""
}

// QueueDetails contains information about a currently running queue.
type QueueDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config    *GameConfiguration     `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
}

func (x *QueueDetails) Reset() {
	*x = QueueDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueDetails) ProtoMessage() {}

func (x *QueueDetails) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueDetails.ProtoReflect.Descriptor instead.
func (*QueueDetails) Descriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{1}
}

func (x *QueueDetails) GetConfig() *GameConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *QueueDetails) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

// QueueStopped contains information about why a queue has stopped.
type QueueStopped struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *QueueStopped) Reset() {
	*x = QueueStopped{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueStopped) ProtoMessage() {}

func (x *QueueStopped) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueStopped.ProtoReflect.Descriptor instead.
func (*QueueStopped) Descriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{2}
}

func (x *QueueStopped) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// MatchDetails contains necessary match information to identify and connect to a match.
type MatchDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId    string `protobuf:"bytes,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Connection string `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *MatchDetails) Reset() {
	*x = MatchDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetails) ProtoMessage() {}

func (x *MatchDetails) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetails.ProtoReflect.Descriptor instead.
func (*MatchDetails) Descriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{3}
}

func (x *MatchDetails) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchDetails) GetConnection() string {
	if x != nil {
		return x.Connection
	}
	return ""
}

// Status represents the current matchmaking status for any target.
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State State `protobuf:"varint,1,opt,name=state,proto3,enum=quip.matchmaker.State" json:"state,omitempty"`
	// Types that are assignable to Details:
	//
	//	*Status_Searching
	//	*Status_Stopped
	//	*Status_Matched
	Details isStatus_Details `protobuf_oneof:"details"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{4}
}

func (x *Status) GetState() State {
	if x != nil {
		return x.State
	}
	return State_STATE_OFFLINE
}

func (m *Status) GetDetails() isStatus_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (x *Status) GetSearching() *QueueDetails {
	if x, ok := x.GetDetails().(*Status_Searching); ok {
		return x.Searching
	}
	return nil
}

func (x *Status) GetStopped() *QueueStopped {
	if x, ok := x.GetDetails().(*Status_Stopped); ok {
		return x.Stopped
	}
	return nil
}

func (x *Status) GetMatched() *MatchDetails {
	if x, ok := x.GetDetails().(*Status_Matched); ok {
		return x.Matched
	}
	return nil
}

type isStatus_Details interface {
	isStatus_Details()
}

type Status_Searching struct {
	Searching *QueueDetails `protobuf:"bytes,2,opt,name=searching,proto3,oneof"`
}

type Status_Stopped struct {
	Stopped *QueueStopped `protobuf:"bytes,3,opt,name=stopped,proto3,oneof"`
}

type Status_Matched struct {
	Matched *MatchDetails `protobuf:"bytes,4,opt,name=matched,proto3,oneof"`
}

func (*Status_Searching) isStatus_Details() {}

func (*Status_Stopped) isStatus_Details() {}

func (*Status_Matched) isStatus_Details() {}

// StatusUpdate indicates a change in status for a set of targets.
type StatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	Status  *Status  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_matchmaker_messages_proto_rawDescGZIP(), []int{5}
}

func (x *StatusUpdate) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *StatusUpdate) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_matchmaker_messages_proto protoreflect.FileDescriptor

var file_matchmaker_messages_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x71, 0x75, 0x69,
	0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a,
	0x11, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x49, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xf6, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65,
	0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x22, 0x59, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2a,
	0x52, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x47, 0x61, 0x6d, 0x62, 0x69, 0x74, 0x4c, 0x4c, 0x43, 0x2f, 0x71, 0x75, 0x69, 0x70,
	0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_matchmaker_messages_proto_rawDescOnce sync.Once
	file_matchmaker_messages_proto_rawDescData = file_matchmaker_messages_proto_rawDesc
)

func file_matchmaker_messages_proto_rawDescGZIP() []byte {
	file_matchmaker_messages_proto_rawDescOnce.Do(func() {
		file_matchmaker_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchmaker_messages_proto_rawDescData)
	})
	return file_matchmaker_messages_proto_rawDescData
}

var file_matchmaker_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_matchmaker_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_matchmaker_messages_proto_goTypes = []interface{}{
	(State)(0),                    // 0: quip.matchmaker.State
	(*GameConfiguration)(nil),     // 1: quip.matchmaker.GameConfiguration
	(*QueueDetails)(nil),          // 2: quip.matchmaker.QueueDetails
	(*QueueStopped)(nil),          // 3: quip.matchmaker.QueueStopped
	(*MatchDetails)(nil),          // 4: quip.matchmaker.MatchDetails
	(*Status)(nil),                // 5: quip.matchmaker.Status
	(*StatusUpdate)(nil),          // 6: quip.matchmaker.StatusUpdate
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_matchmaker_messages_proto_depIdxs = []int32{
	1, // 0: quip.matchmaker.QueueDetails.config:type_name -> quip.matchmaker.GameConfiguration
	7, // 1: quip.matchmaker.QueueDetails.start_time:type_name -> google.protobuf.Timestamp
	0, // 2: quip.matchmaker.Status.state:type_name -> quip.matchmaker.State
	2, // 3: quip.matchmaker.Status.searching:type_name -> quip.matchmaker.QueueDetails
	3, // 4: quip.matchmaker.Status.stopped:type_name -> quip.matchmaker.QueueStopped
	4, // 5: quip.matchmaker.Status.matched:type_name -> quip.matchmaker.MatchDetails
	5, // 6: quip.matchmaker.StatusUpdate.status:type_name -> quip.matchmaker.Status
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_matchmaker_messages_proto_init() }
func file_matchmaker_messages_proto_init() {
	if File_matchmaker_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_matchmaker_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueStopped); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_matchmaker_messages_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Status_Searching)(nil),
		(*Status_Stopped)(nil),
		(*Status_Matched)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchmaker_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_matchmaker_messages_proto_goTypes,
		DependencyIndexes: file_matchmaker_messages_proto_depIdxs,
		EnumInfos:         file_matchmaker_messages_proto_enumTypes,
		MessageInfos:      file_matchmaker_messages_proto_msgTypes,
	}.Build()
	File_matchmaker_messages_proto = out.File
	file_matchmaker_messages_proto_rawDesc = nil
	file_matchmaker_messages_proto_goTypes = nil
	file_matchmaker_messages_proto_depIdxs = nil
}
