// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: matchmaker/frontend.proto

package matchmaker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartQueueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *GameConfiguration `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *StartQueueRequest) Reset() {
	*x = StartQueueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_frontend_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartQueueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartQueueRequest) ProtoMessage() {}

func (x *StartQueueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_frontend_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartQueueRequest.ProtoReflect.Descriptor instead.
func (*StartQueueRequest) Descriptor() ([]byte, []int) {
	return file_matchmaker_frontend_proto_rawDescGZIP(), []int{0}
}

func (x *StartQueueRequest) GetConfig() *GameConfiguration {
	if x != nil {
		return x.Config
	}
	return nil
}

type StatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Status `protobuf:"varint,1,opt,name=status,proto3,enum=quip.matchmaker.Status" json:"status,omitempty"`
	// Details about current queue status.
	Queue *QueueSearching `protobuf:"bytes,2,opt,name=queue,proto3,oneof" json:"queue,omitempty"`
	// Details about the match the user is currently playing in.
	Match *MatchFound `protobuf:"bytes,3,opt,name=match,proto3,oneof" json:"match,omitempty"`
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_frontend_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_frontend_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_matchmaker_frontend_proto_rawDescGZIP(), []int{1}
}

func (x *StatusResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_OFFLINE
}

func (x *StatusResponse) GetQueue() *QueueSearching {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *StatusResponse) GetMatch() *MatchFound {
	if x != nil {
		return x.Match
	}
	return nil
}

var File_matchmaker_frontend_proto protoreflect.FileDescriptor

var file_matchmaker_frontend_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x71, 0x75, 0x69,
	0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x19, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x71, 0x75, 0x69, 0x70,
	0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc9, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x48, 0x01, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x32, 0xd7, 0x01, 0x0a, 0x08, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x44,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65,
	0x75, 0x65, 0x12, 0x22, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3b,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70, 0x51, 0x75, 0x65, 0x75, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2e, 0x5a, 0x2c, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x61, 0x6d, 0x62, 0x69, 0x74,
	0x4c, 0x4c, 0x43, 0x2f, 0x71, 0x75, 0x69, 0x70, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x62,
	0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_matchmaker_frontend_proto_rawDescOnce sync.Once
	file_matchmaker_frontend_proto_rawDescData = file_matchmaker_frontend_proto_rawDesc
)

func file_matchmaker_frontend_proto_rawDescGZIP() []byte {
	file_matchmaker_frontend_proto_rawDescOnce.Do(func() {
		file_matchmaker_frontend_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchmaker_frontend_proto_rawDescData)
	})
	return file_matchmaker_frontend_proto_rawDescData
}

var file_matchmaker_frontend_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_matchmaker_frontend_proto_goTypes = []interface{}{
	(*StartQueueRequest)(nil), // 0: quip.matchmaker.StartQueueRequest
	(*StatusResponse)(nil),    // 1: quip.matchmaker.StatusResponse
	(*GameConfiguration)(nil), // 2: quip.matchmaker.GameConfiguration
	(Status)(0),               // 3: quip.matchmaker.Status
	(*QueueSearching)(nil),    // 4: quip.matchmaker.QueueSearching
	(*MatchFound)(nil),        // 5: quip.matchmaker.MatchFound
	(*emptypb.Empty)(nil),     // 6: google.protobuf.Empty
}
var file_matchmaker_frontend_proto_depIdxs = []int32{
	2, // 0: quip.matchmaker.StartQueueRequest.config:type_name -> quip.matchmaker.GameConfiguration
	3, // 1: quip.matchmaker.StatusResponse.status:type_name -> quip.matchmaker.Status
	4, // 2: quip.matchmaker.StatusResponse.queue:type_name -> quip.matchmaker.QueueSearching
	5, // 3: quip.matchmaker.StatusResponse.match:type_name -> quip.matchmaker.MatchFound
	6, // 4: quip.matchmaker.Frontend.GetStatus:input_type -> google.protobuf.Empty
	0, // 5: quip.matchmaker.Frontend.StartQueue:input_type -> quip.matchmaker.StartQueueRequest
	6, // 6: quip.matchmaker.Frontend.StopQueue:input_type -> google.protobuf.Empty
	1, // 7: quip.matchmaker.Frontend.GetStatus:output_type -> quip.matchmaker.StatusResponse
	6, // 8: quip.matchmaker.Frontend.StartQueue:output_type -> google.protobuf.Empty
	6, // 9: quip.matchmaker.Frontend.StopQueue:output_type -> google.protobuf.Empty
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_matchmaker_frontend_proto_init() }
func file_matchmaker_frontend_proto_init() {
	if File_matchmaker_frontend_proto != nil {
		return
	}
	file_matchmaker_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_matchmaker_frontend_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartQueueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_frontend_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_matchmaker_frontend_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchmaker_frontend_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_matchmaker_frontend_proto_goTypes,
		DependencyIndexes: file_matchmaker_frontend_proto_depIdxs,
		MessageInfos:      file_matchmaker_frontend_proto_msgTypes,
	}.Build()
	File_matchmaker_frontend_proto = out.File
	file_matchmaker_frontend_proto_rawDesc = nil
	file_matchmaker_frontend_proto_goTypes = nil
	file_matchmaker_frontend_proto_depIdxs = nil
}
