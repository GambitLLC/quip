// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: matchmaker/broker.proto

package matchmaker

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// End user notification message. Needs to be sent as a message
// for notifying other friends or other party members.
type StatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_broker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_broker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_matchmaker_broker_proto_rawDescGZIP(), []int{0}
}

func (x *StatusUpdate) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

// End user notification message. Needs to be sent as a message
// for notifying other friends or other party members.
type QueueUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Targets []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	// Types that are assignable to Update:
	//
	//	*QueueUpdate_QueueStarted
	//	*QueueUpdate_QueueStopped
	//	*QueueUpdate_MatchFound
	//	*QueueUpdate_MatchCancelled
	//	*QueueUpdate_MatchStarted
	//	*QueueUpdate_MatchFinished
	Update isQueueUpdate_Update `protobuf_oneof:"update"`
}

func (x *QueueUpdate) Reset() {
	*x = QueueUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_broker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueUpdate) ProtoMessage() {}

func (x *QueueUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_broker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueUpdate.ProtoReflect.Descriptor instead.
func (*QueueUpdate) Descriptor() ([]byte, []int) {
	return file_matchmaker_broker_proto_rawDescGZIP(), []int{1}
}

func (x *QueueUpdate) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (m *QueueUpdate) GetUpdate() isQueueUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *QueueUpdate) GetQueueStarted() *QueueDetails {
	if x, ok := x.GetUpdate().(*QueueUpdate_QueueStarted); ok {
		return x.QueueStarted
	}
	return nil
}

func (x *QueueUpdate) GetQueueStopped() *QueueStopped {
	if x, ok := x.GetUpdate().(*QueueUpdate_QueueStopped); ok {
		return x.QueueStopped
	}
	return nil
}

func (x *QueueUpdate) GetMatchFound() *MatchDetails {
	if x, ok := x.GetUpdate().(*QueueUpdate_MatchFound); ok {
		return x.MatchFound
	}
	return nil
}

func (x *QueueUpdate) GetMatchCancelled() *MatchCancelled {
	if x, ok := x.GetUpdate().(*QueueUpdate_MatchCancelled); ok {
		return x.MatchCancelled
	}
	return nil
}

func (x *QueueUpdate) GetMatchStarted() *MatchConnection {
	if x, ok := x.GetUpdate().(*QueueUpdate_MatchStarted); ok {
		return x.MatchStarted
	}
	return nil
}

func (x *QueueUpdate) GetMatchFinished() *MatchResults {
	if x, ok := x.GetUpdate().(*QueueUpdate_MatchFinished); ok {
		return x.MatchFinished
	}
	return nil
}

type isQueueUpdate_Update interface {
	isQueueUpdate_Update()
}

type QueueUpdate_QueueStarted struct {
	QueueStarted *QueueDetails `protobuf:"bytes,2,opt,name=queue_started,json=queueStarted,proto3,oneof"`
}

type QueueUpdate_QueueStopped struct {
	QueueStopped *QueueStopped `protobuf:"bytes,3,opt,name=queue_stopped,json=queueStopped,proto3,oneof"`
}

type QueueUpdate_MatchFound struct {
	MatchFound *MatchDetails `protobuf:"bytes,4,opt,name=match_found,json=matchFound,proto3,oneof"`
}

type QueueUpdate_MatchCancelled struct {
	MatchCancelled *MatchCancelled `protobuf:"bytes,5,opt,name=match_cancelled,json=matchCancelled,proto3,oneof"`
}

type QueueUpdate_MatchStarted struct {
	MatchStarted *MatchConnection `protobuf:"bytes,6,opt,name=match_started,json=matchStarted,proto3,oneof"`
}

type QueueUpdate_MatchFinished struct {
	MatchFinished *MatchResults `protobuf:"bytes,7,opt,name=match_finished,json=matchFinished,proto3,oneof"`
}

func (*QueueUpdate_QueueStarted) isQueueUpdate_Update() {}

func (*QueueUpdate_QueueStopped) isQueueUpdate_Update() {}

func (*QueueUpdate_MatchFound) isQueueUpdate_Update() {}

func (*QueueUpdate_MatchCancelled) isQueueUpdate_Update() {}

func (*QueueUpdate_MatchStarted) isQueueUpdate_Update() {}

func (*QueueUpdate_MatchFinished) isQueueUpdate_Update() {}

// Internal broker message. Mainly sent by director or gameservers.
type MatchUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//
	//	*MatchUpdate_MatchCancelled
	//	*MatchUpdate_MatchStarted
	//	*MatchUpdate_MatchFinished
	Update isMatchUpdate_Update `protobuf_oneof:"update"`
}

func (x *MatchUpdate) Reset() {
	*x = MatchUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_matchmaker_broker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchUpdate) ProtoMessage() {}

func (x *MatchUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_matchmaker_broker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchUpdate.ProtoReflect.Descriptor instead.
func (*MatchUpdate) Descriptor() ([]byte, []int) {
	return file_matchmaker_broker_proto_rawDescGZIP(), []int{2}
}

func (m *MatchUpdate) GetUpdate() isMatchUpdate_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *MatchUpdate) GetMatchCancelled() *MatchCancelled {
	if x, ok := x.GetUpdate().(*MatchUpdate_MatchCancelled); ok {
		return x.MatchCancelled
	}
	return nil
}

func (x *MatchUpdate) GetMatchStarted() *MatchConnection {
	if x, ok := x.GetUpdate().(*MatchUpdate_MatchStarted); ok {
		return x.MatchStarted
	}
	return nil
}

func (x *MatchUpdate) GetMatchFinished() *MatchResults {
	if x, ok := x.GetUpdate().(*MatchUpdate_MatchFinished); ok {
		return x.MatchFinished
	}
	return nil
}

type isMatchUpdate_Update interface {
	isMatchUpdate_Update()
}

type MatchUpdate_MatchCancelled struct {
	MatchCancelled *MatchCancelled `protobuf:"bytes,1,opt,name=match_cancelled,json=matchCancelled,proto3,oneof"`
}

type MatchUpdate_MatchStarted struct {
	MatchStarted *MatchConnection `protobuf:"bytes,2,opt,name=match_started,json=matchStarted,proto3,oneof"`
}

type MatchUpdate_MatchFinished struct {
	MatchFinished *MatchResults `protobuf:"bytes,3,opt,name=match_finished,json=matchFinished,proto3,oneof"`
}

func (*MatchUpdate_MatchCancelled) isMatchUpdate_Update() {}

func (*MatchUpdate_MatchStarted) isMatchUpdate_Update() {}

func (*MatchUpdate_MatchFinished) isMatchUpdate_Update() {}

var File_matchmaker_broker_proto protoreflect.FileDescriptor

var file_matchmaker_broker_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x71, 0x75, 0x69, 0x70, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x19, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x28, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22,
	0xdc, 0x03, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48,
	0x00, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12,
	0x44, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x75, 0x65, 0x53, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75, 0x69,
	0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x4a, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x75, 0x69,
	0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4a,
	0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x0d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x71, 0x75, 0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61,
	0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x71, 0x75,
	0x69, 0x70, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x2e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x47, 0x61, 0x6d, 0x62, 0x69, 0x74, 0x4c, 0x4c, 0x43, 0x2f, 0x71, 0x75,
	0x69, 0x70, 0x2f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x70, 0x62, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_matchmaker_broker_proto_rawDescOnce sync.Once
	file_matchmaker_broker_proto_rawDescData = file_matchmaker_broker_proto_rawDesc
)

func file_matchmaker_broker_proto_rawDescGZIP() []byte {
	file_matchmaker_broker_proto_rawDescOnce.Do(func() {
		file_matchmaker_broker_proto_rawDescData = protoimpl.X.CompressGZIP(file_matchmaker_broker_proto_rawDescData)
	})
	return file_matchmaker_broker_proto_rawDescData
}

var file_matchmaker_broker_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_matchmaker_broker_proto_goTypes = []interface{}{
	(*StatusUpdate)(nil),    // 0: quip.matchmaker.StatusUpdate
	(*QueueUpdate)(nil),     // 1: quip.matchmaker.QueueUpdate
	(*MatchUpdate)(nil),     // 2: quip.matchmaker.MatchUpdate
	(*QueueDetails)(nil),    // 3: quip.matchmaker.QueueDetails
	(*QueueStopped)(nil),    // 4: quip.matchmaker.QueueStopped
	(*MatchDetails)(nil),    // 5: quip.matchmaker.MatchDetails
	(*MatchCancelled)(nil),  // 6: quip.matchmaker.MatchCancelled
	(*MatchConnection)(nil), // 7: quip.matchmaker.MatchConnection
	(*MatchResults)(nil),    // 8: quip.matchmaker.MatchResults
}
var file_matchmaker_broker_proto_depIdxs = []int32{
	3, // 0: quip.matchmaker.QueueUpdate.queue_started:type_name -> quip.matchmaker.QueueDetails
	4, // 1: quip.matchmaker.QueueUpdate.queue_stopped:type_name -> quip.matchmaker.QueueStopped
	5, // 2: quip.matchmaker.QueueUpdate.match_found:type_name -> quip.matchmaker.MatchDetails
	6, // 3: quip.matchmaker.QueueUpdate.match_cancelled:type_name -> quip.matchmaker.MatchCancelled
	7, // 4: quip.matchmaker.QueueUpdate.match_started:type_name -> quip.matchmaker.MatchConnection
	8, // 5: quip.matchmaker.QueueUpdate.match_finished:type_name -> quip.matchmaker.MatchResults
	6, // 6: quip.matchmaker.MatchUpdate.match_cancelled:type_name -> quip.matchmaker.MatchCancelled
	7, // 7: quip.matchmaker.MatchUpdate.match_started:type_name -> quip.matchmaker.MatchConnection
	8, // 8: quip.matchmaker.MatchUpdate.match_finished:type_name -> quip.matchmaker.MatchResults
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_matchmaker_broker_proto_init() }
func file_matchmaker_broker_proto_init() {
	if File_matchmaker_broker_proto != nil {
		return
	}
	file_matchmaker_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_matchmaker_broker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_broker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_matchmaker_broker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_matchmaker_broker_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*QueueUpdate_QueueStarted)(nil),
		(*QueueUpdate_QueueStopped)(nil),
		(*QueueUpdate_MatchFound)(nil),
		(*QueueUpdate_MatchCancelled)(nil),
		(*QueueUpdate_MatchStarted)(nil),
		(*QueueUpdate_MatchFinished)(nil),
	}
	file_matchmaker_broker_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*MatchUpdate_MatchCancelled)(nil),
		(*MatchUpdate_MatchStarted)(nil),
		(*MatchUpdate_MatchFinished)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_matchmaker_broker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_matchmaker_broker_proto_goTypes,
		DependencyIndexes: file_matchmaker_broker_proto_depIdxs,
		MessageInfos:      file_matchmaker_broker_proto_msgTypes,
	}.Build()
	File_matchmaker_broker_proto = out.File
	file_matchmaker_broker_proto_rawDesc = nil
	file_matchmaker_broker_proto_goTypes = nil
	file_matchmaker_broker_proto_depIdxs = nil
}
